---
import { getEntry, type CollectionEntry } from "astro:content";

type post = CollectionEntry<"posts">;
type Props = {
  post: post;
};

const { title, description, pubDate, updateDate, tags, author, language } =
  Astro.props.post.data;

const authordata = await getEntry(author);

const schema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: title,
  description: description,
  keywords: tags,
  author: {
    "@type": "Person",
    name: authordata.data.name,
    url: "https://cabanossy.se/people/" + authordata.id,
  },
  /* the schema expects Date or DateTime using ISO 8601 format. For Date that is yyyy-MM-dd */
  datePublished: pubDate.toISOString().substring(0, 10),
  /* updateDate is optional frontmatter, so we conditionally add dateModified if it exists */
  ...(updateDate && {
    dateModified: updateDate.toISOString().substring(0, 10),
  }),
  inLanguage: language,
};
---

<script type="application/ld+json" set:html={JSON.stringify(schema)} />
